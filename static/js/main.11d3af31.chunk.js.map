{"version":3,"sources":["Components/stepForm/Names.jsx","Components/stepForm/Address.jsx","Components/stepForm/Submit.jsx","Components/stepForm/Review.jsx","Components/stepForm/Contact.jsx","Components/MultiStepForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Names","formData","setForm","navigation","firstName","lastName","address","city","state","zip","phone","gender","email","hobby","useForm","mode","register","handleSubmit","errors","console","log","NavbarBrand","className","href","onSubmit","data","htmlFor","type","classNames","onChange","id","ref","required","minLength","value","message","placeholder","name","pattern","variant","fullWidth","color","marginTop","next","Address","year","classes","college","grades","marginRight","backgroundColor","previous","Submit","nickName","Row","Col","md","RenderAccordion","summary","details","go","Accordion","AccordionSummary","expandIcon","AccordionDetails","map","index","objKey","Object","keys","objValue","ListItemText","IconButton","component","onClick","toLowerCase","Review","Container","maxWidth","Contact","company","position","statYear","endYear","jobDescription","class","startYear","DefaultData","skills","steps","MutliStepForm","useStep","initialStep","step","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11d3af31.chunk.js","sourcesContent":["import {useForm} from 'react-hook-form';\r\nimport classNames from 'classnames';\r\n\r\nimport { NavbarBrand} from \"reactstrap\";\r\n\r\nconst Names=({formData,setForm,navigation})=>{\r\n    const{firstName,\r\n    lastName,\r\n    address,\r\n    city,\r\n    state,\r\n    zip,\r\n    phone,\r\n    gender,\r\n    email, \r\n    hobby}=formData;\r\n\r\n    const{register,handleSubmit,errors}=useForm({\r\n      mode: \"onTouched\",\r\n    });\r\n    \r\n    const onSubmit = data => console.log(data);\r\n    console.log(errors);\r\n         \r\n    return(   \r\n      <>\r\n      <NavbarBrand  className=\"header\" href=\"/\"><h1>Resume Generaor</h1></NavbarBrand>   \r\n        <div className=\"container py-5\">\r\n          \r\n            <div className=\"card border-0 shadow w-75 p-3 mx-auto\">\r\n            <h3>Basic Info.</h3>\r\n                \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.firstName})}\r\n            onChange={setForm}\r\n            id=\"firstName\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                minLength:{\r\n                    value:4,\r\n                    message:\"altleast 4 characters\"\r\n                },\r\n            })}\r\n            placeholder=\"Enter Your First Name\"\r\n            name=\"firstName\"\r\n          />          \r\n          \r\n              {errors.firstName && (<div className=\"invalid-feedback\">{errors.firstName.message}</div>)}\r\n          \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.lastName})}\r\n            onChange={setForm}\r\n            id=\"lastName\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                minLength:{\r\n                value:4,\r\n                message:\"altleast 4 characters\"\r\n                },\r\n            })}\r\n            placeholder=\"Enter Your Last Name\"\r\n            name=\"lastName\"\r\n          />          \r\n          \r\n              {errors.lastName && (<div className=\"invalid-feedback\">{errors.lastName.message}</div>)}\r\n          \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"address\">Address</label>\r\n          <textarea\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.address})}\r\n            onChange={setForm}\r\n            id=\"address\"\r\n            \r\n            placeholder=\"Enter Your Address\"\r\n            name=\"address\"\r\n          />          \r\n          \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"city\">City</label>\r\n          <textarea\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.city})}\r\n            onChange={setForm}\r\n            id=\"city\"\r\n            \r\n            placeholder=\"Enter Your City\"\r\n            name=\"city\"\r\n          />          \r\n          \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"state\">State</label>\r\n          <textarea\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.state})}\r\n            onChange={setForm}\r\n            id=\"state\"\r\n            \r\n            placeholder=\"Enter Your State\"\r\n            name=\"state\"\r\n          />          \r\n          \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"zip\">zip</label>\r\n          <input\r\n            type=\"number\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.zip})}\r\n            onChange={setForm}\r\n            id=\"zip\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                pattern:{\r\n                    value:/^\\d{6}$/,\r\n                    message:\"please enter a valid 6 digit number\",\r\n                },\r\n                \r\n            })}\r\n            placeholder=\"Enter Your Zip\"\r\n            name=\"zip\"\r\n          />          \r\n                    {errors.zip && (<div className=\"invalid-feedback\">{errors.zip.message}</div>)}\r\n\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">E-mail Address</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.email})}\r\n            onChange={setForm}\r\n            id=\"email\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                pattern:{\r\n                    value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                    message:\"please enter a valid email\",\r\n                }\r\n            })}\r\n            placeholder=\"Enter Your E-mail Address\"\r\n            name=\"email\"\r\n          />\r\n          {errors.email && (<div className=\"invalid-feedback\">{errors.email.message}</div>)}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phone\">Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.phone})}\r\n            onChange={setForm}\r\n            id=\"phone\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                pattern:{\r\n                    value:/^\\d{10}$/,\r\n                    message:\"please enter a valid 10 digit number\",\r\n                },\r\n                \r\n            })}\r\n            placeholder=\"Enter Your Phone Number\"\r\n            name=\"phone\"\r\n          />\r\n          {errors.phone && (<div className=\"invalid-feedback\">{errors.phone.message}</div>)}\r\n\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"gender\" className=\"mr-4\">Choose Your Gender</label>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              id=\"male\"\r\n              value=\"male\"\r\n              name=\"gender\"\r\n              ref={register({\r\n                required:\"this field is required\",\r\n              })}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"male\">male</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              id=\"female\"\r\n              value=\"female\"\r\n              name=\"gender\"\r\n              ref={register({\r\n                required:\"this field is required\",\r\n              })}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"female\">female</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              id=\"other\"\r\n              value=\"other\"\r\n              name=\"gender\"\r\n              ref={register({\r\n                required:\"this field is required\",\r\n              })}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"other\">other</label>\r\n          </div>\r\n        {errors.gender && (\r\n          <div className=\"form-text text-danger\">please click one button</div>\r\n        )}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"hobby\">Hobby</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.hobby})}\r\n            onChange={setForm}\r\n            id=\"hobby\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                minLength:{\r\n                    value:4,\r\n                    message:\"altleast 4 characters\"\r\n                },\r\n            })}\r\n            placeholder=\"Enter Your Hobby\"\r\n            name=\"hobby\"\r\n          />          \r\n          \r\n              {errors.hobby && (<div className=\"invalid-feedback\">{errors.hobby.message}</div>)}\r\n          \r\n        </div>\r\n        \r\n      \r\n        <button type=\"submit\" className=\"btn btn-primary\"\r\n                 variant=\"contained\"\r\n                 fullWidth\r\n                 color=\"primary\"\r\n                 type=\"submit\"\r\n                 style={{marginTop:'1rem'}}\r\n                 onClick={navigation.next}>Go Forward</button>\r\n      </form>\r\n      </div>\r\n            </div>\r\n       \r\n    </>\r\n    );\r\n};\r\nexport default Names;","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { NavbarBrand} from \"reactstrap\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Address=({formData,setForm,navigation})=>{\r\n    const{ year,\r\n    classes,\r\n    college,\r\n    grades,}=formData;\r\n    console.log(navigation);\r\n    const{register,handleSubmit,errors}=useForm({\r\n        mode: \"onTouched\",\r\n      });\r\n      \r\n      const onSubmit = data => console.log(data);\r\n      console.log(errors);\r\n    return(\r\n        <>\r\n                 <NavbarBrand  className=\"header\" href=\"/\"><h1>Resume Generaor</h1></NavbarBrand>   \r\n\r\n            <div className=\"container py-5\">\r\n          \r\n            <div className=\"card border-0 shadow w-75 p-3 mx-auto\">\r\n            <h3>Education</h3>\r\n                \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"college\">college</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.college})}\r\n            onChange={setForm}\r\n            id=\"college\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                minLength:{\r\n                    value:10,\r\n                    message:\"altleast 10 characters\"\r\n                },\r\n            })}\r\n            placeholder=\"Enter Your College\"\r\n            name=\"college\"\r\n          />          \r\n          \r\n              {errors.college && (<div className=\"invalid-feedback\">{errors.college.message}</div>)}\r\n          \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"classes\">Class</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.classes})}\r\n            onChange={setForm}\r\n            id=\"classes\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                minLength:{\r\n                    value:4,\r\n                    message:\"altleast  characters\"\r\n                },\r\n            })}\r\n            placeholder=\"Enter Your Class\"\r\n            name=\"classes\"\r\n          />          \r\n          \r\n              {errors.classes && (<div className=\"invalid-feedback\">{errors.classes.message}</div>)}\r\n          \r\n        </div>\r\n        \r\n        \r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"grades\">grades</label>\r\n          <input\r\n            type=\"number\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.grades})}\r\n            onChange={setForm}\r\n            id=\"grades\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                pattern:{\r\n                    value:/^\\d{2}$/,\r\n                    message:\"please enter a valid 2 digit number\",\r\n                },\r\n                \r\n            })}\r\n            placeholder=\"Enter Your grades\"\r\n            name=\"grades\"\r\n          />          \r\n                    {errors.grades && (<div className=\"invalid-feedback\">{errors.grades.message}</div>)}\r\n\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"year\">Year</label>\r\n          <input\r\n            type=\"number\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.year})}\r\n            onChange={setForm}\r\n            id=\"year\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                pattern:{\r\n                    value:/^\\d{4}$/,\r\n                    message:\"please enter a valid 4 digit number\",\r\n                },\r\n                \r\n            })}\r\n            placeholder=\"Enter Your Year\"\r\n            name=\"year\"\r\n          />          \r\n                    {errors.year && (<div className=\"invalid-feedback\">{errors.year.message}</div>)}\r\n\r\n        </div>\r\n\r\n        \r\n        <button type=\"submit\" className=\"btn btn-primary\"\r\n                 variant=\"contained\"\r\n                 fullWidth\r\n                 color=\"secondary\"\r\n                 type=\"submit\"\r\n                 style={{marginRight:\"1rem\",marginTop:'1rem',backgroundColor:'purple'}}\r\n                 onClick={navigation.previous}>Back</button>\r\n                 \r\n        <button type=\"submit\" className=\"btn btn-primary\"\r\n                 variant=\"contained\"\r\n                 fullWidth\r\n                 color=\"primary\"\r\n                 type=\"submit\"\r\n                 style={{marginTop:'1rem'}}\r\n                 onClick={navigation.next}>Next</button>\r\n\r\n        \r\n\r\n            \r\n\r\n      </form>\r\n      </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Address;","import React from \"react\";\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport { NavbarBrand} from \"reactstrap\";\r\n\r\n\r\nconst Submit = ({formData,setForm,navigation}) => {\r\n    const{\r\n        firstName,\r\n        lastName,\r\n        nickName,\r\n        address,\r\n        city,\r\n        state,\r\n        zip,\r\n        phone,\r\n        email\r\n    }=formData;\r\n    return (\r\n        <Container><br/>\r\n\t\t\t\r\n\t\t\t\r\n            <Row>\r\n\t\t\t\t<Col md={4} className=\"flexit\">\r\n\t\t\t\t\t<h2>Name</h2>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>First Name:</b> {address}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Last Name:</b> {city}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Nick Name:</b> {state}</span></Row>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{/* <h4>Senior Secondary Education</h4>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>School:</b> {obj.schl1}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Start Year:</b> {obj.startyear1}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>CGPA:</b> {obj.cgpa1}</span></Row>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<h4>College Education</h4>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>College:</b> {obj.clg}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Course:</b> {obj.course}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Start Year:</b> {obj.startyear2}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>CGPA:</b> {obj.cgpa2}</span></Row> */}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n            <br /><br />\r\n            <Row>\r\n\t\t\t\t<Col md={4} className=\"flexit\">\r\n\t\t\t\t\t<h2>Address</h2>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Location:</b> {address}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>City:</b> {city}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>State:</b> {state}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Zip:</b> {zip}</span></Row>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{/* <h4>Senior Secondary Education</h4>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>School:</b> {obj.schl1}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Start Year:</b> {obj.startyear1}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>CGPA:</b> {obj.cgpa1}</span></Row>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<h4>College Education</h4>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>College:</b> {obj.clg}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Course:</b> {obj.course}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Start Year:</b> {obj.startyear2}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>CGPA:</b> {obj.cgpa2}</span></Row> */}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n            <br /><br />\r\n            <Row>\r\n\t\t\t\t<Col md={4} className=\"flexit\">\r\n\t\t\t\t\t<h2>Contact</h2>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={8}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Phone:</b> {phone}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Email:</b> {email}</span></Row>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{/* <h4>Senior Secondary Education</h4>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>School:</b> {obj.schl1}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Start Year:</b> {obj.startyear1}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>CGPA:</b> {obj.cgpa1}</span></Row>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<h4>College Education</h4>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>College:</b> {obj.clg}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Course:</b> {obj.course}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>Start Year:</b> {obj.startyear2}</span></Row>\r\n\t\t\t\t\t<Row><span className=\"fontinc\"><b>CGPA:</b> {obj.cgpa2}</span></Row> */}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n            <br /><br />\r\n\t\t</Container>\r\n    );\r\n}\r\n\r\nexport default Submit;","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { NavbarBrand} from \"reactstrap\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Submit from './Submit';\r\n\r\n\r\nconst Review=({formData,navigation})=>{\r\n    \r\n    const{go}=navigation;\r\n    \r\n    const{\r\n        firstName,\r\n        lastName,\r\n        address,\r\n        city,\r\n        state,\r\n        zip,\r\n        phone,\r\n        email\r\n    }=formData;\r\n    \r\n\r\n    return(\r\n        <>     \r\n         <NavbarBrand  className=\"header\" href=\"/\"><h1>Resume Generaor</h1></NavbarBrand>   \r\n        \r\n        <Container maxWidth='sm'>\r\n            <h3>Review</h3>\r\n            <RenderAccordion summary=\"Basic\" go={go} details={[\r\n                {\"First Name\":firstName},\r\n                {'Last Name':lastName},\r\n                \r\n            ]}/>\r\n\r\n            <RenderAccordion summary=\"Address\" go={go} details={[\r\n                {\"Address\":address},\r\n                {'City':city},\r\n                {'State':state},\r\n                {'Zip':zip},\r\n            ]}/>\r\n\r\n            <RenderAccordion summary=\"Contact\" go={go} details={[\r\n                {\"Phone\":phone},\r\n                {'Email':email},  \r\n            ]}/>\r\n\r\n            {/* <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{marginTop:'1.5rem'}}\r\n                onClick={()=>go('submit')}\r\n            >\r\n                Submit\r\n            </Button> */}\r\n        </Container>\r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nexport const RenderAccordion=({summary,details,go})=>(\r\n    <Accordion>\r\n        \r\n        <AccordionSummary\r\n        expandIcon={<ExpandMore/>}>{summary}</AccordionSummary>\r\n        <AccordionDetails>\r\n            <div> \r\n                {\r\n                    details.map((data,index)=>{\r\n                        const objKey=Object.keys(data)[0];\r\n                        const objValue=data[Object.keys(data)[0]];\r\n                        return<>\r\n                            <ListItemText key={index}>\r\n                                <h3>{`${objKey}:${objValue}`}</h3>\r\n                            </ListItemText>\r\n                            \r\n                        </>\r\n                    })\r\n\r\n                    }\r\n                    <IconButton \r\n                    color=\"primary\" \r\n                    component=\"span\"\r\n                    onClick={()=>go(`${summary.toLowerCase()}`)}>\r\n                        <EditIcon/>\r\n                    </IconButton>\r\n                \r\n            </div>\r\n        </AccordionDetails>\r\n        \r\n    </Accordion>\r\n    \r\n)\r\n\r\nexport default Review;","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { NavbarBrand} from \"reactstrap\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Contact=({formData,setForm,navigation})=>{\r\n    const{company,\r\n    position,\r\n    statYear,\r\n    endYear,\r\n    jobDescription,}=formData;\r\n    console.log(navigation);\r\n    const{register,handleSubmit,errors}=useForm({\r\n        mode: \"onTouched\",\r\n      });\r\n      \r\n      const onSubmit = data => console.log(data);\r\n      console.log(errors);\r\n    return(\r\n        <>\r\n              <NavbarBrand  className=\"header\" href=\"/\"><h1>Resume Generaor</h1></NavbarBrand>   \r\n\r\n            <div className=\"container py-5\">\r\n          \r\n            <div className=\"card border-0 shadow w-75 p-3 mx-auto\">\r\n            <h3>Expeirence</h3>\r\n                \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"company\">Company</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.company})}\r\n            onChange={setForm}\r\n            id=\"company\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                minLength:{\r\n                    value:5,\r\n                    message:\"altleast 5 characters\"\r\n                },\r\n            })}\r\n            placeholder=\"Enter Your Company\"\r\n            name=\"company\"\r\n          />          \r\n          \r\n              {errors.company && (<div className=\"invalid-feedback\">{errors.company.message}</div>)}\r\n          \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"position\">Position</label>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.class})}\r\n            onChange={setForm}\r\n            id=\"position\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                minLength:{\r\n                    value:4,\r\n                    message:\"altleast  characters\"\r\n                },\r\n            })}\r\n            placeholder=\"Your Position\"\r\n            name=\"position\"\r\n          />          \r\n          \r\n              {errors.position && (<div className=\"invalid-feedback\">{errors.position.message}</div>)}\r\n          \r\n        </div>\r\n        \r\n        \r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"startYear\">Start Year</label>\r\n          <input\r\n            type=\"number\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.startYear})}\r\n            onChange={setForm}\r\n            id=\"startYear\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                pattern:{\r\n                    value:/^\\d{4}$/,\r\n                    message:\"please enter a valid 4 digit number\",\r\n                },\r\n                \r\n            })}\r\n            placeholder=\"Enter Your Start Year\"\r\n            name=\"startYear\"\r\n          />          \r\n                    {errors.startYear && (<div className=\"invalid-feedback\">{errors.startYear.message}</div>)}\r\n\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"endYear\">End Year</label>\r\n          <input\r\n            type=\"number\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.endYear})}\r\n            onChange={setForm}\r\n            id=\"endYear\"\r\n            ref={register({\r\n                required:\"this field is required\",\r\n                pattern:{\r\n                    value:/^\\d{4}$/,\r\n                    message:\"please enter a valid 2 digit number\",\r\n                },\r\n                \r\n            })}\r\n            placeholder=\"Enter Your End Year\"\r\n            name=\"endYear\"\r\n          />          \r\n                    {errors.endYear && (<div className=\"invalid-feedback\">{errors.endYear.message}</div>)}\r\n\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"jobDescription\">Job Description</label>\r\n          <textarea\r\n            type=\"text\"\r\n            className={classNames(\"form-control\",{\"is-invalid\":errors.class})}\r\n            onChange={setForm}\r\n            id=\"jobDescription\"\r\n            \r\n            placeholder=\"Enter Your Job Description\"\r\n            name=\"jobDescription\"\r\n          />          \r\n          \r\n        </div>\r\n\r\n        \r\n        <button type=\"submit\" className=\"btn btn-primary\"\r\n                 variant=\"contained\"\r\n                 fullWidth\r\n                 color=\"secondary\"\r\n                 type=\"submit\"\r\n                 style={{marginRight:\"1rem\",marginTop:'1rem',backgroundColor:'purple'}}\r\n                 onClick={navigation.previous}>Back</button>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\"\r\n                 variant=\"contained\"\r\n                 fullWidth\r\n                 color=\"primary\"\r\n                 type=\"submit\"\r\n                 style={{marginTop:'1rem'}}\r\n                 onClick={navigation.next}>Next</button>\r\n\r\n        \r\n\r\n            \r\n\r\n      </form>\r\n      </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Contact;","import React from 'react';\r\nimport {useForm,useStep} from 'react-hooks-helper';\r\nimport Names from './stepForm/Names';\r\nimport Address from './stepForm/Address';\r\nimport Review from './stepForm/Review';\r\nimport Submit from './stepForm/Submit';\r\nimport Contact from './stepForm/Contact';\r\n\r\nconst DefaultData={\r\n     firstName:\"\",\r\n     lastName:\"\",\r\n     address:\"\",\r\n     city:\"\",\r\n     state:\"\",\r\n     zip:\"\",\r\n     phone:\"\",\r\n     gender:\"\",\r\n     email:\"\", \r\n    skills:\"\",\r\n    hobby:\"\",\r\n    year:\"\",\r\n    classes:\"\",\r\n    college:\"\",\r\n    grades:\"\",\r\n    company:\"\",\r\n    position:\"\",\r\n    statYear:\"\",\r\n    endYear:\"\",\r\n    jobDescription:\"\",\r\n\r\n};\r\n\r\n\r\nconst steps=[\r\n    {id:'names'},\r\n    {id:'address'},\r\n    {id:'contact'},\r\n    {id:'review'},\r\n    {id:'submit'},\r\n];\r\n\r\nconst MutliStepForm=()=>{\r\n    const[formData,setForm]=useForm(DefaultData); \r\n    const{step,navigation}=useStep({\r\n        steps,\r\n        initialStep:0,\r\n    });\r\n    \r\n    \r\n\r\n\r\n    const props={formData,setForm,navigation};\r\n    \r\n    switch(step.id){\r\n        case 'names':\r\n            return<Names {...props} />\r\n        case \"address\":\r\n            return<Address {...props} />\r\n        case 'contact':\r\n            return<Contact {...props} />\r\n        case 'review':\r\n            return<Review {...props} />\r\n        case 'submit':\r\n            return<Submit {...props}/>\r\n        }\r\n        \r\n    \r\n\r\n    return(\r\n    <>\r\n        \r\n    </>\r\n    );\r\n};\r\nexport default MutliStepForm; ","import MutliStepForm from './Components/MultiStepForm';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MutliStepForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App />\n    </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}